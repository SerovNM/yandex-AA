/**
 * Даны два связанных списка.
 * Необходимо объединить их в один отсортированный по возрастанию связанный список.
 *
 *
 *
 *  Этот подход основан на рекурсивном сравнении значений узлов каждого списка и добавлении их
 *  в результирующий список в отсортированном порядке. По мере обработки списков добавляются узлы
 *  с минимальным значением, что приводит к формированию отсортированного списка на выходе.
 */

var mergeTwoLists = function(l1, l2) {
    if (!l1) { // Если первый список закончился, возвращаем второй список
        return l2;
    }
    if (!l2) { // Если второй список закончился, возвращаем первый список
        return l1;
    }
    if (l1.val < l2.val) { // Если значение текущего узла первого списка меньше, чем значение текущего узла второго списка
        l1.next = mergeTwoLists(l1.next, l2); // Рекурсивно вызываем функцию для следующего узла первого списка и оставшегося списка второго
        return l1; // Возвращаем первый список
    } else { // Иначе
        l2.next = mergeTwoLists(l1, l2.next); // Рекурсивно вызываем функцию для оставшегося списка первого и следующего узла второго списка
        return l2; // Возвращаем второй список
    }
};

var mergeKLists = function(lists) {  // Основная функция, объединяющая массив связанных списков
    let ans = null; // Инициализируем переменную для результирующего списка
    for (let i = 0; i < lists.length; i++) { // Проходим по всем спискам в массиве
        ans = mergeTwoLists(ans, lists[i]); // Объединяем текущий результирующий список с текущим списком из массива
    }
    return ans; // Возвращаем результирующий список
};
