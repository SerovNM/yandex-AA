/**
 * Даны две строки s и t. Напишите функцию, которая определяет,
 * является ли одна из этих строк результатом другой строки после выполнения ровно одной
 * операции вставки, удаления или замены.
 */
/**
 * Input: s = "abc", t = "abd"
 * Output: true
 * Explanation: Заменяем 'c' на 'd'.
 *
 * Input: s = "ab", t = "acb"
 * Output: true
 * Explanation: Вставляем 'c' между 'a' и 'b'.
 */
function isOneEditDistance(s, t) {
    const lenS = s.length;
    const lenT = t.length;

    // Если разница в длине строк больше чем 1, то они не могут быть на расстоянии 1 редактирования
    if (Math.abs(lenS - lenT) > 1) {
        return false;
    }

    let edits = 0; // Счетчик операций редактирования

    for (let i = 0, j = 0; i < lenS && j < lenT; i++, j++) {
        // Если символы не совпадают, увеличиваем счетчик редактирования
        if (s[i] !== t[j]) {
            edits++;

            // Пробуем выполнить возможные операции редактирования
            if (lenS > lenT) { // Если строка s длиннее, смещаем указатель в t на -1
                j--;
            } else if (lenS < lenT) { // Если строка t длиннее, смещаем указатель в s на -1
                i--;
            }

            // Если количество операций редактирования больше 1, то строки не на расстоянии 1 редактирования
            if (edits > 1) {
                return false;
            }
        }
    }

    // Если одна из строк закончилась, а другая - нет, и осталась 1 операция вставки
    if (Math.abs(lenS - lenT) === 1) {
        edits++;
    }

    // Если количество операций редактирования равно 1, строки находятся на расстоянии 1 редактирования
    return edits === 1;
}

// Пример использования:
console.log(isOneEditDistance("abc", "abd")); // Ожидаемый результат: true
console.log(isOneEditDistance("ab", "acb")); // Ожидаемый результат: false
console.log(isOneEditDistance("abc", "def")); // Ожидаемый результат: false
console.log(isOneEditDistance("abc", "ab")); // Ожидаемый результат: true
