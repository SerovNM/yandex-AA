/*
Найти максимум в скользящем окне

Example 1:

Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]
Explanation:
Window position                Max
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7
Example 2:

Input: nums = [1], k = 1
Output: [1]

 */

var maxSlidingWindow = function(nums, k) {
    // Инициализируем массив для результата и массив для индексов
    const result = [];
    const indexes = [];

    for (let i = 0; i < nums.length; i++) {
        // Пока индекс последнего элемента в окне больше текущего индекса и индекс последнего элемента в окне
        // меньше либо равен индексу (i - k), удаляем индекс последнего элемента в окне
        while (indexes.length && indexes[0] <= i - k) {
            indexes.shift();
        }

        // Пока индекс последнего элемента в окне больше текущего элемента, удаляем индекс последнего элемента в окне
        while (indexes.length && nums[i] >= nums[indexes[indexes.length - 1]]) {
            indexes.pop();
        }

        // Добавляем текущий индекс в конец массива индексов
        indexes.push(i);

        // Если индекс текущего элемента больше или равен (k - 1), добавляем максимальный элемент в результат
        if (i >= k - 1) {
            result.push(nums[indexes[0]]);
        }
    }

    return result;
};
/*
Вначале, мы можем инициализировать пустой массив для хранения максимальных элементов и массив для отслеживания индексов элементов в окне.
Затем мы начинаем итерацию по массиву nums.
На каждом шаге итерации:
Мы сначала удаляем из массива индексов все индексы, которые находятся за пределами текущего окна (т.е. лежат вне интервала [i-k+1, i]).
Затем мы удаляем из массива индексов все индексы, соответствующие элементам, которые меньше или равны текущему элементу nums[i]. Это гарантирует, что мы будем иметь только элементы, которые могут быть максимальными в текущем окне.
Мы добавляем текущий индекс в массив индексов.
Если индекс текущего элемента больше или равен k - 1, это означает, что текущее окно достигло своего размера. Мы добавляем максимальный элемент в окне в результат.
По завершении итерации возвращаем результат.
 */
