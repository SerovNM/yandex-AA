var isBalanced = function(root) {
    // Если дерево пусто, мы можем считать его сбалансированным...
    if (root == null) return true;
    // Функция Height вернет -1, когда дерево несбалансировано...
    if (Height(root) == -1) return false;
    return true;
}

// Создаем функцию для возврата "высоты" текущего поддерева с использованием рекурсии...
var Height = function(root) {
    // Базовый случай...
    if (root == null) return 0;
    // Высота левого поддерева...
    let leftHeight = Height(root.left);
    // Высота правого поддерева...
    let rightHeight = Height(root.right);
    // В случае, если левое поддерево или правое поддерево несбалансированы, возвращаем -1...
    if (leftHeight == -1 || rightHeight == -1) return -1;
    // Если их высоты отличаются более чем на '1', возвращаем -1...
    if (Math.abs(leftHeight - rightHeight) > 1) return -1;
    // В противном случае, возвращаем высоту этого поддерева как max(leftHeight, rightHeight) + 1...
    return Math.max(leftHeight, rightHeight) + 1;
};
